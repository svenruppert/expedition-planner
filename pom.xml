<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.svenruppert</groupId>
        <artifactId>dependencies</artifactId>
        <version>06.00.02</version>
    </parent>

    <artifactId>expedition-planner</artifactId>
    <name>Expedition Planner</name>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>


    <inceptionYear>2023</inceptionYear>
    <organization>
        <name>Sven Ruppert</name>
        <url>http://www.svenruppert.com</url>
    </organization>

    <url>https://github.com/svenruppert/core-java-project-template</url>
    <description>Planning your next expedition or hiking trip..</description>
    <scm>
        <url>https://github.com/svenruppert/expedition-planner</url>
        <connection>scm:git:https://github.com/svenruppert/expedition-planner.git</connection>
        <developerConnection>scm:git:https://github.com/svenruppert/expedition-planner.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <developers>
        <developer>
            <name>Sven Ruppert</name>
            <email>sven.ruppert@gmail.com</email>
            <roles>
                <role>Founder</role>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/svenruppert/expedition-planner/issues</url>
    </issueManagement>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <properties>

        <app.main.class>com.svenruppert.rest.Application</app.main.class>
        <deploy-repo-url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</deploy-repo-url>
        <deploy-repo-snapshots-url>https://s01.oss.sonatype.org/content/repositories/snapshots
        </deploy-repo-snapshots-url>

        <jdk.version>21</jdk.version>

        <maven.compiler.release>${jdk.version}</maven.compiler.release>
        <maven.compiler.source>${jdk.version}</maven.compiler.source> <!--redundant, but IntelliJ doesn't-->
        <maven.compiler.target>${jdk.version}</maven.compiler.target> <!--use release when importing-->

        <maven.compiler.testRelease>${jdk.version}</maven.compiler.testRelease>
        <maven.compiler.testSource>${jdk.version}</maven.compiler.testSource>
        <maven.compiler.testTarget>${jdk.version}</maven.compiler.testTarget>

        <minimum-maven.version>3.9.9</minimum-maven.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <slf4j.version>1.7.30</slf4j.version>
        <log4j-api.version>2.13.0</log4j-api.version>

        <pitest-prod-classes>com.svenruppert.*</pitest-prod-classes>
        <pitest-test-classes>junit.com.svenruppert.*</pitest-test-classes>

        <!--TDD jUnit5-->
        <!--        <junit-platform-maven-plugin.version>1.1.7</junit-platform-maven-plugin.version>-->
        <junit-platform-maven-plugin.timeout>300</junit-platform-maven-plugin.timeout>

        <failOnMissingWebXml>false</failOnMissingWebXml>
        <vaadin.version>24.7.2</vaadin.version>
        <drivers.downloader.phase>pre-integration-test</drivers.downloader.phase>
        <jetty.version>11.0.24</jetty.version>
        <testcontainers.version>1.20.4</testcontainers.version>

        <undertow.version>2.3.15.Final</undertow.version>

    </properties>

    <distributionManagement>
        <repository>
            <id>deploy-repo-maven</id>
            <name>deploy-repo-maven</name>
            <url>${deploy-repo-url}</url>
        </repository>
        <snapshotRepository>
            <id>deploy-repo-maven-snapshots</id>
            <name>deploy-repo-maven-snapshots</name>
            <url>${deploy-repo-snapshots-url}</url>
        </snapshotRepository>
    </distributionManagement>
    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>libs-release</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <id>snapshots</id>
            <name>libs-snapshot</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
        <!-- Vaadin related repo-->
        <!-- Repository used by many Vaadin add-ons -->
        <repository>
            <id>Vaadin Directory</id>
            <url>https://maven.vaadin.com/vaadin-addons</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>libs-release</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <id>snapshots</id>
            <name>libs-snapshot</name>
            <url>https://repo.maven.apache.org/maven2/</url>
        </pluginRepository>

<!--        Vaadin related Plugins-->

    </pluginRepositories>

    <dependencyManagement>
        <!--project versions-->
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-api</artifactId>
                <version>4.27.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.svenruppert</groupId>
            <artifactId>core</artifactId>
            <version>06.00.00</version>
        </dependency>
        <dependency>
            <groupId>com.svenruppert</groupId>
            <artifactId>functional-reactive</artifactId>
            <version>03.00.00</version>
        </dependency>
        <dependency>
            <groupId>net.oneandone.reflections8</groupId>
            <artifactId>reflections8</artifactId>
        </dependency>

        <!--        DemoApplication REST -->
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>6.1.3</version>
        </dependency>
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin-testtools</artifactId>
            <version>6.1.3</version>
            <scope>test</scope>
        </dependency>

        <!--Infrastructure-->

        <dependency>
            <groupId>org.eclipse.store</groupId>
            <artifactId>storage-embedded</artifactId>
            <version>2.1.2</version>
        </dependency>

        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-core</artifactId>
            <version>${undertow.version}</version>
        </dependency>

        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-servlet</artifactId>
            <version>${undertow.version}</version>
        </dependency>

        <dependency>
            <groupId>io.undertow</groupId>
            <artifactId>undertow-websockets-jsr</artifactId>
            <version>${undertow.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>

        <!--        Vaadin Flow related-->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-core</artifactId>
            <exclusions>
                <!--                <exclusion>-->
                <!--                    <groupId>com.vaadin</groupId>-->
                <!--                    <artifactId>vaadin-dev</artifactId>-->
                <!--                </exclusion>-->
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>copilot</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>copilot-project</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>hilla-dev</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-react</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!--    REST-Testing-->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>5.4.0</version>
            <scope>test</scope>
        </dependency>

        <!--        Testing Docker-->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>selenium</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <!--        Testing Vaadin Flow-->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>5.9.2</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.webdriverextensions</groupId>
                    <artifactId>webdriverextensions-maven-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <!--                <plugin>-->
                <!--                    <groupId>de.sormuras.junit</groupId>-->
                <!--                    <artifactId>junit-platform-maven-plugin</artifactId>-->
                <!--                    <version>${junit-platform-maven-plugin.version}</version>-->
                <!--                </plugin>-->
            </plugins>
        </pluginManagement>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
            </plugin>
            <!-- Jetty plugin for easy testing without a server -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <httpConnector>
                        <!--host>localhost</host-->
                        <port>9999</port>
                    </httpConnector>
                    <!-- If using IntelliJ IDEA with autocompilation, this
                    might cause lots of unnecessary compilations in the
                    background.-->
                    <scan>2</scan>
                    <!-- Use war output directory to get the webpack files -->
                    <webApp>
                        <allowDuplicateFragmentNames>true</allowDuplicateFragmentNames>
                    </webApp>
                </configuration>
            </plugin>

            <!--
                Take care of synchronizing java dependencies and imports in
                package.json and main.js files.
                It also creates webpack.config.js if not exists yet.
            -->
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-frontend</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <inherited>true</inherited>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven-3</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${minimum-maven.version}</version>
                                </requireMavenVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <configuration>
                    <!--                    <rulesUri>version-number-rules.xml</rulesUri>-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <!--<goal>jar</goal> do not define it here again !!-->
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${app.main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-repository-plugin</artifactId>
            </plugin>

            <!--Enable mutation testing-->
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>1.2.0</version>
                    </dependency>

                </dependencies>
                <configuration>
                    <threads>2</threads>
                    <outputFormats>
                        <outputFormat>XML</outputFormat>
                        <outputFormat>HTML</outputFormat>
                    </outputFormats>
                    <targetClasses>
                        <param>${pitest-prod-classes}</param>
                        <!--<param>org.reflections.*</param>-->
                    </targetClasses>
                    <targetTests>
                        <param>${pitest-test-classes}</param>
                    </targetTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>10.12.0</version> <!-- Checkstyle version -->
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <sourceDirectories>
                                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            </sourceDirectories>
                            <excludes>webpack.generated.js</excludes>
                            <excludes>webpack.config.js</excludes>
                            <excludes>package.json</excludes>
                            <excludes>package-lock.json</excludes>
                            <excludes>**/node/**</excludes>
                            <excludes>**/node_modules/**</excludes>
                            <excludes>**/generated/**/*</excludes>
                            <excludes>**/generated-sources/vwscdn/**/*</excludes>
                            <excludes>**/generated-sources/wscdn/**/*</excludes>
                            <excludes>com/vaadin/**/*,in/virit/**/*,com/acme/**/*</excludes>
                            <checkstyleRules>

                                <module name="Checker">
                                    <module name="BeforeExecutionExclusionFileFilter">
                                        <property name="fileNamePattern" value="module\-info\.java$"/>
                                    </module>
                                    <!--<module name="JavadocPackage"/>-->
                                    <!--<module name="NewlineAtEndOfFile"/>-->
                                    <module name="FileTabCharacter"/>

                                    <module name="RegexpSingleline">
                                        <property name="format" value="\s+$"/>
                                        <property name="minimum" value="0"/>
                                        <property name="maximum" value="0"/>
                                        <property name="message" value="Line has trailing spaces."/>
                                    </module>

                                    <module name="TreeWalker">

                                        <!--<module name="FileContentsHolder"/>-->
                                        <!-- Checkstyle has a bug that disallows @return in annotation methods, enable only on demand -->
                                        <!--<module name="JavadocMethod"/>-->

                                        <!--<module name="JavadocType"/>-->
                                        <!--<module name="JavadocVariable"/>-->
                                        <!--<module name="JavadocStyle"/>-->

                                        <module name="TodoComment"/>

                                        <module name="ConstantName"/>
                                        <module name="LocalFinalVariableName"/>
                                        <module name="LocalVariableName"/>
                                        <module name="MemberName"/>
                                        <module name="MethodName"/>
                                        <module name="PackageName"/>
                                        <module name="ParameterName"/>
                                        <module name="StaticVariableName"/>
                                        <module name="TypeName"/>

                                        <module name="IllegalImport"/>
                                        <module name="RedundantImport"/>
                                        <module name="UnusedImports"/>

                                        <module name="EmptyForIteratorPad"/>
                                        <module name="GenericWhitespace"/>
                                        <module name="MethodParamPad"/>
                                        <module name="ParenPad"/>
                                        <module name="TypecastParenPad"/>
                                        <module name="WhitespaceAfter"/>
                                        <module name="WhitespaceAround">
                                            <!-- The RCURLY token has strange semantics where annotation arrays should have a spacing while normal
                                                 arrays should not have such a spacing - therefore, we rather exclude it from automatic checks -->
                                            <property name="tokens"
                                                      value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,TYPE_EXTENSION_AND"/>
                                        </module>
                                        <!--<module name="NoWhitespaceAfter"/>-->
                                        <!--<module name="NoWhitespaceBefore"/>-->

                                        <module name="ModifierOrder"/>

                                        <module name="LeftCurly"/>
                                        <module name="RightCurly"/>

                                        <module name="EmptyStatement"/>
                                        <module name="EqualsHashCode"/>
                                        <module name="IllegalInstantiation"/>
                                        <module name="MissingSwitchDefault"/>
                                        <!--<module name="RedundantThrows"/>-->
                                        <module name="SimplifyBooleanExpression"/>
                                        <module name="SimplifyBooleanReturn"/>

                                        <module name="HideUtilityClassConstructor"/>
                                        <module name="InterfaceIsType"/>

                                        <module name="ArrayTypeStyle"/>
                                        <module name="UpperEll"/>
                                        <module name="SuppressionCommentFilter"/>
                                    </module>
                                </module>
                            </checkstyleRules>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <outputFileFormat>plain</outputFileFormat>
                            <outputFileFormat>xml</outputFileFormat>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>--add-exports java.base/jdk.internal.misc=ALL-UNNAMED --enable-native-access=ALL-UNNAMED</argLine>
                </configuration>

            </plugin>
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>2.7.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>makeAggregateBom</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <projectType>library</projectType>
                    <schemaVersion>1.4</schemaVersion>
                    <includeBomSerialNumber>true</includeBomSerialNumber>
                    <includeCompileScope>true</includeCompileScope>
                    <includeProvidedScope>true</includeProvidedScope>
                    <includeRuntimeScope>true</includeRuntimeScope>
                    <includeSystemScope>true</includeSystemScope>
                    <includeTestScope>false</includeTestScope>
                    <includeLicenseText>false</includeLicenseText>
                    <outputReactorProjects>true</outputReactorProjects>
                    <outputFormat>all</outputFormat>
                    <outputName>CycloneDX-SBom</outputName>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <reporting>
        <plugins>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>_java</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.ow2.asm</groupId>
                                <artifactId>asm</artifactId>
                                <version>9.5</version> <!-- Use newer version of ASM -->
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add sources</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${project.build.directory}/generated-sources/annotations</source>
                                        <source>src/main/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add generated sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${project.build.directory}/generated-sources/annotations</source>
                                        <source>src/main/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add generated test sources</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>${project.build.directory}/generated-test-sources/test-annotations
                                        </source>
                                        <source>src/test/java</source>
                                        <!--                    <source>src/test/kotlin</source>-->
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>_shadejar</id>
            <build>
                <finalName>application</finalName>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${app.main.class}
                                    </mainClass> <!-- Here you should put the main class of your application -->
                                </transformer>
                            </transformers>
                            <filters>
                                <filter> <!-- This filter is needed to avoid a bug in the shade plugin -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

        </profile>

    </profiles>
</project>